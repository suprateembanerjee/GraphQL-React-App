{"ast":null,"code":"var _jsxFileName = \"/Users/suprateembanerjee/GraphQL/client/src/DisplayMovies.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUERY_ALL_MOVIES = gql`\n    query GetAllUsers {\n        movies {\n            name\n            release\n        }\n    }\n`;\nfunction DisplayMovies() {\n  _s();\n  const {\n    data: movieData\n  } = useQuery(QUERY_ALL_MOVIES);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: movieData && movieData.movies.map(movie => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: movie.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"was released in \", movie.release]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n}\n_s(DisplayMovies, \"JE8cDwzWGj6NptsiAGzRICSgDjg=\", false, function () {\n  return [useQuery];\n});\n_c = DisplayMovies;\nexport default DisplayMovies;\nvar _c;\n$RefreshReg$(_c, \"DisplayMovies\");","map":{"version":3,"names":["React","useState","useQuery","gql","jsxDEV","_jsxDEV","QUERY_ALL_MOVIES","DisplayMovies","_s","data","movieData","children","movies","map","movie","name","fileName","_jsxFileName","lineNumber","columnNumber","release","_c","$RefreshReg$"],"sources":["/Users/suprateembanerjee/GraphQL/client/src/DisplayMovies.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nconst QUERY_ALL_MOVIES = gql `\n    query GetAllUsers {\n        movies {\n            name\n            release\n        }\n    }\n`\n\n\nfunction DisplayMovies() {\n\n    const {data: movieData} = useQuery(QUERY_ALL_MOVIES);\n\n    return <div>\n        {movieData &&\n            movieData.movies.map((movie) => {\n                return <div>\n                    <h1>{movie.name}</h1> <h2>was released in {movie.release}</h2>\n                    </div>\n            })\n        }\n        </div>\n}\n\nexport default DisplayMovies"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,GAAG,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,gBAAgB,GAAGH,GAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAGD,SAASI,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAErB,MAAM;IAACC,IAAI,EAAEC;EAAS,CAAC,GAAGR,QAAQ,CAACI,gBAAgB,CAAC;EAEpD,oBAAOD,OAAA;IAAAM,QAAA,EACFD,SAAS,IACNA,SAAS,CAACE,MAAM,CAACC,GAAG,CAAEC,KAAK,IAAK;MAC5B,oBAAOT,OAAA;QAAAM,QAAA,gBACHN,OAAA;UAAAM,QAAA,EAAKG,KAAK,CAACC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,KAAC,eAAAd,OAAA;UAAAM,QAAA,GAAI,kBAAgB,EAACG,KAAK,CAACM,OAAO;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC;IACd,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AACd;AAACX,EAAA,CAbQD,aAAa;EAAA,QAEQL,QAAQ;AAAA;AAAAmB,EAAA,GAF7Bd,aAAa;AAetB,eAAeA,aAAa;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}