{"ast":null,"code":"var _jsxFileName = \"/Users/suprateembanerjee/GraphQL/client/src/DisplayData.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUERY_ALL_USERS = gql`\n    query GetAllUsers {\n        users {\n            name\n            id\n            nationality\n            username\n            age\n            friends {\n                name\n            }\n        }\n    }\n`;\nconst QUERY_ALL_MOVIES = gql`\n    query GetAllUsers {\n        movies {\n            name\n            release\n            isInTheaters\n        }\n    }\n`;\nconst QUERY_MOVIE = gql`\nquery getMovie($name: String!) {\n       movie(name: $name) {\n        name\n        release\n        isInTheaters\n        }\n    }\n`;\nfunction DisplayData() {\n  _s();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_ALL_MOVIES);\n  const [movieSearched, setMovieSearched] = useState(\"\");\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data is Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this);\n  }\n  if (data) {\n    console.log(data);\n  }\n  if (error) {\n    console.log(error);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data && data.users.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Name: \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Age: \", user.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Username: \", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Interstellar...\",\n        onChange: event => setMovieSearched(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Fetch Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Release: \", movie.release]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 12\n  }, this);\n}\n_s(DisplayData, \"XUZ6pFwMz1s9IedplkKGBDlSOKg=\", false, function () {\n  return [useQuery];\n});\n_c = DisplayData;\nexport default DisplayData;\nvar _c;\n$RefreshReg$(_c, \"DisplayData\");","map":{"version":3,"names":["React","useState","useQuery","gql","jsxDEV","_jsxDEV","QUERY_ALL_USERS","QUERY_ALL_MOVIES","QUERY_MOVIE","DisplayData","_s","data","loading","error","movieSearched","setMovieSearched","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","users","map","user","name","age","username","type","placeholder","onChange","event","target","value","movie","release","_c","$RefreshReg$"],"sources":["/Users/suprateembanerjee/GraphQL/client/src/DisplayData.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nconst QUERY_ALL_USERS = gql `\n    query GetAllUsers {\n        users {\n            name\n            id\n            nationality\n            username\n            age\n            friends {\n                name\n            }\n        }\n    }\n`\n\nconst QUERY_ALL_MOVIES = gql `\n    query GetAllUsers {\n        movies {\n            name\n            release\n            isInTheaters\n        }\n    }\n`\n\nconst QUERY_MOVIE = gql `\nquery getMovie($name: String!) {\n       movie(name: $name) {\n        name\n        release\n        isInTheaters\n        }\n    }\n`\n\n\nfunction DisplayData() {\n\n    const {data, loading, error} = useQuery(QUERY_ALL_MOVIES);\n    const [movieSearched, setMovieSearched] = useState(\"\")\n\n    if (loading) {\n        return <h1>Data is Loading...</h1>\n    }\n\n    if (data) {\n        console.log(data)\n    }\n\n    if (error) {\n        console.log(error)\n    }\n\n    return <div>\n        {data && \n            data.users.map((user) => {\n                return <div>\n                    <h1>Name: {user.name}</h1>\n                    <h1>Age: {user.age}</h1>\n                    <h1>Username: {user.username}</h1>\n\n                    </div>\n            })\n        }  \n        {/* {data && \n            data.movies.map((movie) => {\n                return <div>\n                    <h1>Name: {movie.name}</h1>\n                    <h1>Release: {movie.release}</h1>\n                    <h1>In Theaters: {String(movie.isInTheaters)}</h1>\n                    </div>\n            })\n        } */}\n\n        <div>\n            <input type='text' placeholder=\"Interstellar...\" onChange={(event) => setMovieSearched(event.target.value)}/>\n            <button>Fetch Data</button>\n            <div>\n            <h1>Release: {movie.release}</h1>\n            </div>\n        </div>\n        </div>\n}\n\nexport default DisplayData"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}